#include <iostream>
using namespace std;

#define MAX_SIZE 100

class Stack {
    int top;
    int stackArray[MAX_SIZE];

public:
    Stack() {
        top = -1; // Initialize the top of the stack
    }

    bool isEmpty() {
        return (top == -1);
    }

    bool isFull() {
        return (top == MAX_SIZE - 1);
    }

    void push(int element) {
        if (isFull()) {
            cout << "Stack Overflow: Cannot push element, stack is full." << endl;
        } else {
            stackArray[++top] = element;
            cout << element << " pushed into the stack." << endl;
        }
    }

    void pop() {
        if (isEmpty()) {
            cout << "Stack Underflow: Cannot pop element, stack is empty." << endl;
        } else {
            cout << stackArray[top--] << " popped from the stack." << endl;
        }
    }

    void display() {
        if (isEmpty()) {
            cout << "Stack is empty." << endl;
        } else {
            cout << "Elements in the stack: ";
            for (int i = 0; i <= top; ++i) {
                cout << stackArray[i] << " ";
            }
            cout << endl;
        }
    }
};

int main() {
    Stack stack;

    stack.push(10);
    stack.push(20);
    stack.push(30);

    stack.display();

    stack.pop();
    stack.display();

    stack.pop();
    stack.pop();
    stack.display();

    return 0;
}
