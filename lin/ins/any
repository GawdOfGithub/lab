#include <iostream>
using namespace std;

// Node structure for the linked list
struct Node {
    int data;
    Node* next;
};

// Function to insert an element at any position in the linked list
Node* insertAtPosition(Node* head, int data, int position) {
    Node* newNode = new Node();
    newNode->data = data;
    newNode->next = nullptr;

    if (position == 0) {
        // Inserting at the beginning
        newNode->next = head;
        head = newNode;
    } else {
        // Inserting at a specific position
        Node* current = head;
        for (int i = 0; i < position - 1 && current != nullptr; ++i) {
            current = current->next;
        }

        if (current == nullptr) {
            cout << "Position out of bounds. Cannot insert." << endl;
        } else {
            newNode->next = current->next;
            current->next = newNode;
        }
    }

    return head;
}

// Function to display the linked list
void displayList(Node* head) {
    Node* current = head;
    while (current != nullptr) {
        cout << current->data << " ";
        current = current->next;
    }
    cout << endl;
}

int main() {
    // Creating an empty linked list
    Node* head = nullptr;

    // Inserting elements at any position
    head = insertAtPosition(head, 5, 0);
    head = insertAtPosition(head, 10, 1);
    head = insertAtPosition(head, 15, 1);
    head = insertAtPosition(head, 20, 0);

    // Displaying the linked list
    cout << "Linked list after inserting at any position: ";
    displayList(head);

    return 0;
}
